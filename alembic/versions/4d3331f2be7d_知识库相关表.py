"""知识库相关表

Revision ID: 4d3331f2be7d
Revises: 0b6d1c3494b4
Create Date: 2025-07-04 15:41:46.669199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4d3331f2be7d'
down_revision: Union[str, None] = '0b6d1c3494b4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_retrieval_record_chunks',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('knowledge_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Numeric(precision=7, scale=6), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('t_knowledge',
    sa.Column('icon', sa.String(length=200), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('describe', sa.Text(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_t_knowledge_name'), 't_knowledge', ['name'], unique=False)
    op.create_table('t_knowledge_document',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('activate_status', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('process_id', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_t_knowledge_document_name'), 't_knowledge_document', ['name'], unique=False)
    op.create_table('t_retrieval_record',
    sa.Column('data_source_id', sa.Integer(), nullable=False),
    sa.Column('data_source_type', sa.Enum('retrieval_test', 'conversation', name='retrievaldatasourcetype'), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('t_retrieval_record')
    op.drop_index(op.f('ix_t_knowledge_document_name'), table_name='t_knowledge_document')
    op.drop_table('t_knowledge_document')
    op.drop_index(op.f('ix_t_knowledge_name'), table_name='t_knowledge')
    op.drop_table('t_knowledge')
    op.drop_table('t_retrieval_record_chunks')
    # ### end Alembic commands ###
