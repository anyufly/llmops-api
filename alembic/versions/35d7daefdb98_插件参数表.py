"""插件参数表

Revision ID: 35d7daefdb98
Revises: 2a5488ce0dc2
Create Date: 2025-06-06 03:44:14.663959

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "35d7daefdb98"
down_revision: Union[str, None] = "2a5488ce0dc2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "t_plugin_args",
        sa.Column("plugin_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("arg_type", sa.String(length=100), nullable=False),
        sa.Column("arg_description", sa.Text(), nullable=False),
        sa.Column("required", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "create_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("create_by", sa.Integer(), nullable=True),
        sa.Column("update_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("update_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["create_by"],
            ["t_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plugin_id"],
            ["t_plugin.id"],
        ),
        sa.ForeignKeyConstraint(
            ["update_by"],
            ["t_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE TYPE plugintype AS ENUM ('reserved', 'custom')")
    op.add_column(
        "t_plugin",
        sa.Column("plugin_type", sa.Enum("reserved", "custom", name="plugintype"), nullable=False),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("t_plugin", "plugin_type")
    op.execute("DROP TYPE plugintype")
    op.drop_table("t_plugin_args")
    # ### end Alembic commands ###
