"""插件其他相关表

Revision ID: aac351c6383e
Revises: 35d7daefdb98
Create Date: 2025-06-06 11:39:37.238725

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aac351c6383e'
down_revision: Union[str, None] = '35d7daefdb98'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_plugin_tags',
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('t_custom_plugin_config',
    sa.Column('openapi_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('plugin_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['plugin_id'], ['t_plugin.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_headers', 't_custom_plugin_config', ['headers'], unique=False, postgresql_using='gin')
    op.create_index('idx_openapi_schema', 't_custom_plugin_config', ['openapi_schema'], unique=False, postgresql_using='gin')
    op.create_table('t_plugin_tag_association',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('plugin_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('update_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('update_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['create_by'], ['t_user.id'], ),
    sa.ForeignKeyConstraint(['plugin_id'], ['t_plugin.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['t_plugin_tags.id'], ),
    sa.ForeignKeyConstraint(['update_by'], ['t_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('t_plugin_tag_association')
    op.drop_index('idx_openapi_schema', table_name='t_custom_plugin_config', postgresql_using='gin')
    op.drop_index('idx_headers', table_name='t_custom_plugin_config', postgresql_using='gin')
    op.drop_table('t_custom_plugin_config')
    op.drop_table('t_plugin_tags')
    # ### end Alembic commands ###
